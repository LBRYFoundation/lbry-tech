---
import { Code } from "astro/components";

const {examples, cmd} = Astro.props;

if (!examples) return;

// Treat title and output as metadata and remove from examples
const title = examples.title;
const output = examples.output;
delete examples.title;
delete examples.output;

function setExample(example, cmd){
                console.log(example, cmd);
                document.body.classList.toggle(example);
            }

---

<div class="examples">
    {examples ? (
        <div>
            <h3>Examples</h3>
            <h4>{title}</h4>
            {Object.keys(examples).map(example=>(
                <button data-example={example}>{example}</button>
            ))}
            {Object.keys(examples).map(example=>(
                <div class:list={["example", cmd, example]}>
                    <p>{example}</p>
                    <Code lang={"bash"} code={`${examples[example]}`} />
                </div>
            ))}
        </div>
        <script define:vars={{examples, cmd}}>
            
            document.querySelectorAll(`.${cmd} button`).forEach(btn=>{
                btn.addEventListener('click', (e)=>{
                    Object.keys(examples).map(example=>{
                        document.body.classList.remove(example);
                    });
                    document.body.classList.add(btn.getAttribute('data-example'));
                })
            })
            
        </script>
    ) : ''}
</div>
<style>
    .example {
        display: none;
    }

    body:not(.curl, .lbrynet, .python) .examples .example:first-of-type {
        display: block;
    }

    body.curl .example.curl {
        display: block;
    }

    body.lbrynet .example.lbrynet {
        display: block;
    }

    body.python .example.python {
        display: block;
    }

</style>