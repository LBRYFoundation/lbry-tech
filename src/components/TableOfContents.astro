---
// TableOfContents.astro
import TableOfContentsHeading from "./TableOfContentsHeading.astro";
import TocItem from '../utils/generateToc.ts';
const { headings, edit } = Astro.props;
import { REPOSITORY, edit_page } from "../config";

const toc = headings && headings.length ? TocItem(headings) : [];

console.log(edit);

---

<section class="toc">
    <div class="container">
        <summary><p id="on-this-page">On this page</p></summary>
        <nav>
            <ul>
                {toc.map((heading) => <TableOfContentsHeading heading={heading}/>)}
            </ul>
        </nav>
    </div>
</section>
<style is:inline>
    .toc {
        position: fixed;
        width: calc(var(--sidebar-width) - 2rem);
        height: fit-content;
        overflow-y: auto;
        max-height: calc(100vh - var(--nav-height) - 2rem * 2);
        inset-block: 0;
        inset-inline-end: 2rem;
        margin-top: calc(2rem + var(--nav-height));
        margin-bottom: 2rem;
        border-radius: 1em;
        background-color: var(--secondary-background);
        transition: 0.3s;
        z-index: 10;
    }
    
    .toc .container {
        display: flex;
        flex-direction: column;
        padding: 1rem 1rem 0;
        overflow-y: auto;
    }

    .toc .container summary {
        font-weight: bold;
    }

    .toc .container nav {
    }
    
    .toc ul {
        list-style: none;
        padding-inline-start: 0;
    }
    
    .toc .container nav > ul {
        margin: 0.5rem;
        border-left: 1px solid var(--background);
    }

    .toc ul li:hover {
        font-size: 0.785rem;
    }

    @media only screen and (max-width: 750px) {
        .toc {
            margin-top: var(--nav-height);
            margin-bottom: 0;
            inset-inline-start: 0;
            inset-inline-end: unset;
            transform: translateX(-100%);
        }
    }
</style>